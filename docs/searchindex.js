Search.setIndex({"docnames": ["api_reference", "generated/spe.bagging.ParametricBaggingRegressor", "generated/spe.estimators.cp_smoother", "index", "user_guide"], "filenames": ["api_reference.rst", "generated/spe.bagging.ParametricBaggingRegressor.rst", "generated/spe.estimators.cp_smoother.rst", "index.rst", "user_guide.rst"], "titles": ["API Reference", "spe.bagging.ParametricBaggingRegressor", "spe.estimators.cp_smoother", "SPE Documentation", "User Guide"], "terms": {"class": 1, "estim": 1, "none": [1, 2], "n_estim": 1, "10": 1, "max_sampl": 1, "1": 1, "0": [1, 2], "max_featur": 1, "bootstrap": 1, "true": 1, "bootstrap_featur": 1, "fals": 1, "oob_scor": 1, "warm_start": 1, "n_job": 1, "random_st": 1, "verbos": 1, "method": 1, "attribut": 1, "__init__": 1, "fit": 1, "x": [1, 2], "y": [1, 2], "max_depth": 1, "sample_weight": 1, "check_input": 1, "chol_ep": 1, "do_param_boot": 1, "build": 1, "ensembl": 1, "from": 1, "train": [1, 2], "set": [1, 2], "paramet": [1, 2], "arrai": [1, 2], "like": [1, 2], "spars": 1, "matrix": [1, 2], "shape": [1, 2], "n_sampl": 1, "n_featur": 1, "The": 1, "input": 1, "sampl": 1, "matric": 1, "ar": 1, "accept": 1, "onli": 1, "thei": 1, "support": 1, "base": 1, "target": 1, "valu": 1, "label": 1, "classif": 1, "real": 1, "number": 1, "regress": 1, "int": 1, "float": [1, 2], "default": [1, 2], "argument": 1, "us": 1, "instead": 1, "self": 1, "overrid": 1, "when": 1, "construct": 1, "ha": 1, "weight": 1, "If": 1, "equal": 1, "note": 1, "thi": 1, "i": [1, 2], "bool": [1, 2], "function": 1, "option": [1, 2], "choleski": [1, 2], "parametr": 1, "covari": [1, 2], "In": 1, "case": [1, 2], "ignor": 1, "np": [1, 2], "ey": [1, 2], "perform": 1, "return": [1, 2], "object": [1, 2], "get_group_x": 1, "x_pred": 1, "get_linear_smooth": 1, "tr_idx": [1, 2], "ts_idx": 1, "ret_full_p": 1, "get_metadata_rout": 1, "rais": 1, "notimplementederror": 1, "doe": 1, "metadata": 1, "rout": 1, "yet": 1, "get_param": 1, "deep": 1, "get": 1, "contain": 1, "subobject": 1, "param": 1, "dict": 1, "name": 1, "map": 1, "predict": 1, "y_refit": 1, "an": 1, "comput": [1, 2], "mean": 1, "ndarrai": 1, "score": 1, "coeffici": 1, "determin": 1, "r": 1, "2": 1, "defin": 1, "frac": 1, "u": 1, "v": 1, "where": 1, "residu": 1, "sum": 1, "squar": 1, "y_true": 1, "y_pred": 1, "total": 1, "best": 1, "possibl": 1, "can": 1, "neg": 1, "becaus": 1, "model": [1, 2], "arbitrarili": 1, "wors": 1, "A": 1, "constant": 1, "alwai": 1, "expect": 1, "disregard": 1, "featur": 1, "would": 1, "test": [1, 2], "For": 1, "some": 1, "mai": 1, "precomput": 1, "kernel": 1, "list": 1, "gener": 1, "n_samples_fit": 1, "n_output": 1, "w": 1, "t": 1, "call": 1, "regressor": 1, "multioutput": 1, "uniform_averag": 1, "version": 1, "23": 1, "keep": 1, "consist": 1, "r2_score": 1, "influenc": 1, "all": 1, "except": 1, "multioutputregressor": 1, "set_fit_request": 1, "str": 1, "unchang": 1, "request": 1, "pass": 1, "relev": 1, "enable_metadata_rout": 1, "see": 1, "sklearn": 1, "set_config": 1, "pleas": 1, "user": 1, "guid": 1, "how": 1, "mechan": 1, "work": 1, "each": 1, "provid": 1, "meta": 1, "error": 1, "should": 1, "given": 1, "alia": 1, "origin": 1, "util": 1, "metadata_rout": 1, "retain": 1, "exist": 1, "allow": 1, "you": 1, "chang": 1, "other": 1, "new": 1, "3": 1, "sub": 1, "e": 1, "g": 1, "insid": 1, "pipelin": 1, "otherwis": 1, "effect": 1, "updat": 1, "set_param": 1, "simpl": 1, "well": 1, "nest": 1, "latter": 1, "have": 1, "form": 1, "compon": 1, "__": 1, "so": 1, "": [1, 2], "instanc": 1, "set_predict_request": 1, "set_score_request": 1, "estimators_samples_": 1, "subset": 1, "drawn": 1, "dynam": 1, "indic": 1, "identifi": 1, "member": 1, "re": 1, "creat": 1, "properti": 1, "order": 1, "reduc": 1, "memori": 1, "footprint": 1, "store": 1, "data": 1, "thu": 1, "fetch": 1, "slower": 1, "than": 1, "chol_t": 2, "chol_": 2, "cov_st": 2, "mallow": 2, "cp": 2, "ani": 2, "linear": 2, "depend": 2, "todo": 2, "longer": 2, "descript": 2, "n": 2, "p": 2, "sigma_i": 2, "which": 2, "sigma_": 2, "assum": 2, "err_est": 2, "type": 2, "mse": 2}, "objects": {"spe.bagging": [[1, 0, 1, "", "ParametricBaggingRegressor"]], "spe.bagging.ParametricBaggingRegressor": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "estimators_samples_"], [1, 1, 1, "", "fit"], [1, 1, 1, "", "get_group_X"], [1, 1, 1, "", "get_linear_smoother"], [1, 1, 1, "", "get_metadata_routing"], [1, 1, 1, "", "get_params"], [1, 1, 1, "", "predict"], [1, 1, 1, "", "score"], [1, 1, 1, "", "set_fit_request"], [1, 1, 1, "", "set_params"], [1, 1, 1, "", "set_predict_request"], [1, 1, 1, "", "set_score_request"]], "spe.estimators": [[2, 3, 1, "", "cp_smoother"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "spe": [0, 1, 2, 3], "estim": [0, 2], "bag": [0, 1], "forest": 0, "parametricbaggingregressor": 1, "cp_smoother": 2, "document": 3, "user": 4, "guid": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "spe.estimators": [[0, "spe-estimators"]], "spe.bagging": [[0, "spe-bagging"]], "spe.forest": [[0, "spe-forest"]], "spe.bagging.ParametricBaggingRegressor": [[1, "spe-bagging-parametricbaggingregressor"]], "spe.estimators.cp_smoother": [[2, "spe-estimators-cp-smoother"]], "SPE Documentation": [[3, "spe-documentation"]], "User Guide": [[4, "user-guide"]]}, "indexentries": {"parametricbaggingregressor (class in spe.bagging)": [[1, "spe.bagging.ParametricBaggingRegressor"]], "__init__() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.__init__"]], "estimators_samples_ (spe.bagging.parametricbaggingregressor attribute)": [[1, "spe.bagging.ParametricBaggingRegressor.estimators_samples_"]], "fit() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.fit"]], "get_group_x() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.get_group_X"]], "get_linear_smoother() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.get_linear_smoother"]], "get_metadata_routing() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.get_metadata_routing"]], "get_params() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.get_params"]], "predict() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.predict"]], "score() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.score"]], "set_fit_request() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.set_fit_request"]], "set_params() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.set_params"]], "set_predict_request() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.set_predict_request"]], "set_score_request() (spe.bagging.parametricbaggingregressor method)": [[1, "spe.bagging.ParametricBaggingRegressor.set_score_request"]], "cp_smoother() (in module spe.estimators)": [[2, "spe.estimators.cp_smoother"]]}})